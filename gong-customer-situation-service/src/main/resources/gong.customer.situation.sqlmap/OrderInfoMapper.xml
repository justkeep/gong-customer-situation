<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gong.customer.situation.dao.mapper.OrderInfoMapper" >
  <resultMap id="BaseResultMap" type="com.gong.customer.situation.domain.OrderInfo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="seller_id" property="sellerId" jdbcType="INTEGER" />
    <result column="buyer_id" property="buyerId" jdbcType="INTEGER" />
    <result column="order_status" property="orderStatus" jdbcType="TINYINT" />
    <result column="product_category_id" property="productCategoryId" jdbcType="INTEGER" />
    <result column="receivable_amount" property="receivableAmount" jdbcType="DECIMAL" />
    <result column="paid_amount" property="paidAmount" jdbcType="DECIMAL" />
    <result column="amount_to_be_received" property="amountToBeReceived" jdbcType="DECIMAL" />
    <result column="deleted" property="deleted" jdbcType="BIT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, seller_id, buyer_id, order_status, product_category_id, receivable_amount, paid_amount, 
    amount_to_be_received, deleted, create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.gong.customer.situation.domain.OrderInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from order_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from order_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.gong.customer.situation.domain.OrderInfoExample" >
    delete from order_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gong.customer.situation.domain.OrderInfo" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into order_info (seller_id, buyer_id, order_status, 
      product_category_id, receivable_amount, paid_amount, 
      amount_to_be_received, deleted, create_time, 
      update_time)
    values (#{sellerId,jdbcType=INTEGER}, #{buyerId,jdbcType=INTEGER}, #{orderStatus,jdbcType=TINYINT}, 
      #{productCategoryId,jdbcType=INTEGER}, #{receivableAmount,jdbcType=DECIMAL}, #{paidAmount,jdbcType=DECIMAL}, 
      #{amountToBeReceived,jdbcType=DECIMAL}, #{deleted,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.gong.customer.situation.domain.OrderInfo" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into order_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sellerId != null" >
        seller_id,
      </if>
      <if test="buyerId != null" >
        buyer_id,
      </if>
      <if test="orderStatus != null" >
        order_status,
      </if>
      <if test="productCategoryId != null" >
        product_category_id,
      </if>
      <if test="receivableAmount != null" >
        receivable_amount,
      </if>
      <if test="paidAmount != null" >
        paid_amount,
      </if>
      <if test="amountToBeReceived != null" >
        amount_to_be_received,
      </if>
      <if test="deleted != null" >
        deleted,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sellerId != null" >
        #{sellerId,jdbcType=INTEGER},
      </if>
      <if test="buyerId != null" >
        #{buyerId,jdbcType=INTEGER},
      </if>
      <if test="orderStatus != null" >
        #{orderStatus,jdbcType=TINYINT},
      </if>
      <if test="productCategoryId != null" >
        #{productCategoryId,jdbcType=INTEGER},
      </if>
      <if test="receivableAmount != null" >
        #{receivableAmount,jdbcType=DECIMAL},
      </if>
      <if test="paidAmount != null" >
        #{paidAmount,jdbcType=DECIMAL},
      </if>
      <if test="amountToBeReceived != null" >
        #{amountToBeReceived,jdbcType=DECIMAL},
      </if>
      <if test="deleted != null" >
        #{deleted,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gong.customer.situation.domain.OrderInfoExample" resultType="java.lang.Integer" >
    select count(*) from order_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update order_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.sellerId != null" >
        seller_id = #{record.sellerId,jdbcType=INTEGER},
      </if>
      <if test="record.buyerId != null" >
        buyer_id = #{record.buyerId,jdbcType=INTEGER},
      </if>
      <if test="record.orderStatus != null" >
        order_status = #{record.orderStatus,jdbcType=TINYINT},
      </if>
      <if test="record.productCategoryId != null" >
        product_category_id = #{record.productCategoryId,jdbcType=INTEGER},
      </if>
      <if test="record.receivableAmount != null" >
        receivable_amount = #{record.receivableAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.paidAmount != null" >
        paid_amount = #{record.paidAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.amountToBeReceived != null" >
        amount_to_be_received = #{record.amountToBeReceived,jdbcType=DECIMAL},
      </if>
      <if test="record.deleted != null" >
        deleted = #{record.deleted,jdbcType=BIT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update order_info
    set id = #{record.id,jdbcType=BIGINT},
      seller_id = #{record.sellerId,jdbcType=INTEGER},
      buyer_id = #{record.buyerId,jdbcType=INTEGER},
      order_status = #{record.orderStatus,jdbcType=TINYINT},
      product_category_id = #{record.productCategoryId,jdbcType=INTEGER},
      receivable_amount = #{record.receivableAmount,jdbcType=DECIMAL},
      paid_amount = #{record.paidAmount,jdbcType=DECIMAL},
      amount_to_be_received = #{record.amountToBeReceived,jdbcType=DECIMAL},
      deleted = #{record.deleted,jdbcType=BIT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gong.customer.situation.domain.OrderInfo" >
    update order_info
    <set >
      <if test="sellerId != null" >
        seller_id = #{sellerId,jdbcType=INTEGER},
      </if>
      <if test="buyerId != null" >
        buyer_id = #{buyerId,jdbcType=INTEGER},
      </if>
      <if test="orderStatus != null" >
        order_status = #{orderStatus,jdbcType=TINYINT},
      </if>
      <if test="productCategoryId != null" >
        product_category_id = #{productCategoryId,jdbcType=INTEGER},
      </if>
      <if test="receivableAmount != null" >
        receivable_amount = #{receivableAmount,jdbcType=DECIMAL},
      </if>
      <if test="paidAmount != null" >
        paid_amount = #{paidAmount,jdbcType=DECIMAL},
      </if>
      <if test="amountToBeReceived != null" >
        amount_to_be_received = #{amountToBeReceived,jdbcType=DECIMAL},
      </if>
      <if test="deleted != null" >
        deleted = #{deleted,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gong.customer.situation.domain.OrderInfo" >
    update order_info
    set seller_id = #{sellerId,jdbcType=INTEGER},
      buyer_id = #{buyerId,jdbcType=INTEGER},
      order_status = #{orderStatus,jdbcType=TINYINT},
      product_category_id = #{productCategoryId,jdbcType=INTEGER},
      receivable_amount = #{receivableAmount,jdbcType=DECIMAL},
      paid_amount = #{paidAmount,jdbcType=DECIMAL},
      amount_to_be_received = #{amountToBeReceived,jdbcType=DECIMAL},
      deleted = #{deleted,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>